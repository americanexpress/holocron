// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`holocronModule executeLoadModuleData should call loadModuleData with correct args 1`] = `
Array [
  Array [
    Object {
      "fetchClient": [MockFunction],
      "module": Object {
        "displayName": "FakeComponent",
      },
      "ownProps": Object {},
      "store": Object {
        "dispatch": [MockFunction] {
          "calls": Array [
            Array [
              [Function],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "getState": [MockFunction],
      },
    },
  ],
]
`;

exports[`holocronModule should gracefully handle module state missing from store 1`] = `
<div>
  Mock Module 
  2
</div>
`;

exports[`holocronModule should not pass the moduleState to the module if options.provideModuleState is passed as false 1`] = `
<div>
  |
  undefined
</div>
`;

exports[`holocronModule should pass mergeProps to connect if it is specified 1`] = `
<div>
  3
   * 
  4
   = 
  12
</div>
`;

exports[`holocronModule should pass the moduleState to the module by default, if a reducer and name are specified 1`] = `
<div>
  {"mockKey":"mockValue"}
  |
  object
</div>
`;

exports[`holocronModule should pass the moduleState to the module if options is passed without the \`provideModuleState\` key for backwards compatibility 1`] = `
<div>
  {"mockKey":"mockValue"}
  |
  object
</div>
`;

exports[`holocronModule should provide the module state as a plain JS prop if a reducer is provided 1`] = `
<div>
  value
</div>
`;

exports[`holocronModule should warn if a reducer is set but no name 1`] = `
Array [
  Array [
    "The Holocron Config in 'HolocronModule(undefined)' requires a 'name' when passing a 'reducer'.
The 'reducer' will not be added to the Redux Store without a 'name'.",
  ],
]
`;

exports[`holocronModule should wrap module with no arguments 1`] = `
<div>
  Mock Module
</div>
`;
